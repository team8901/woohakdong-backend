name: Deploy prod server

on:
  push:
    branches:
      - "main"
      - "test-prod-ci"
  pull_request:
    branches:
      - "main"
      - "test-prod-ci"
  workflow_dispatch:

jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip deploy') &&
      !contains(github.event.pull_request.body, 'skip deploy')

    permissions:
      contents: read
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com

      - name: Build and push Docker image for amd64
        run: |
          docker build --platform linux/amd64 \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }}-amd64 .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }}-amd64

      - name: Create and push Docker manifest
        run: |
          docker manifest create ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }} \
            --amend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }}-amd64

          docker manifest push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }}
    outputs:
      commit_sha: ${{ env.COMMIT_SHA }}

  update-manifests:
    name: Update Deployment Manifests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the manifests repo
        uses: actions/checkout@v4
        with:
          repository: team8901/woohakdong-manifests
          token: ${{ secrets.GITHUB_TOKEN }}
          path: manifests

      - name: Update Deployment Image
        run: |
          sed -i "s|image: .*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:prod-${{ env.COMMIT_SHA }}|" manifests/deployment.yaml

      - name: Commit and Push Changes
        run: |
          cd manifests
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add deployment.yaml
          git commit -m "update: woohakdong-spring to prod-${{ env.COMMIT_SHA }}"
          git push origin main
